"""add tags table and many-to-many relation with statements

Revision ID: 6ef8c48bf3d4
Revises: 90e2fa363428
Create Date: 2025-06-25 16:16:57.433350

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6ef8c48bf3d4'
down_revision: Union[str, None] = '90e2fa363428'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tags',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('color', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('tags_to_statement',
    sa.Column('tag_id', sa.UUID(), nullable=False),
    sa.Column('statement_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['statement_id'], ['statements.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('tag_id', 'statement_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tags_to_statement')
    op.drop_table('tags')
    # ### end Alembic commands ###
